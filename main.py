#!/usr/bin/env python3
"""
Deploy Stand - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö —Å—Ç–µ–Ω–¥–æ–≤ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ –±–∞–∑–µ Proxmox
–ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import asyncio
import logging
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
from modules.menu import run_menu
from modules.connection_manager import get_connection_manager
from modules.proxmox_client import create_proxmox_client

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('deploy_stand.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        import os
        os.system('clear' if os.name != 'nt' else 'cls')

        logger.info("–ó–∞–ø—É—Å–∫ Deploy Stand - —Å–∏—Å—Ç–µ–º—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å—Ç–µ–Ω–¥–æ–≤ –í–ú")

        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Ç–µ—Ä–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
        from modules.menu import DeployStandMenu
        menu = DeployStandMenu()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∞—Å—Ç–µ—Ä –≤—ã–±–æ—Ä–∞/—Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
        server_config = await menu.run_server_selection_wizard()

        if not server_config:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–µ—Ä–∞")
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É Proxmox")
            return

        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        config = {
            'host': os.getenv('PROXMOX_HOST', server_config.get('host', 'localhost')),
            'user': os.getenv('PROXMOX_USER', server_config.get('user', 'root@pam')),
            'password': os.getenv('PROXMOX_PASSWORD', server_config.get('password', '')),
            'token_name': server_config.get('token_name', ''),
            'token_value': server_config.get('token_value', ''),
            'verify_ssl': os.getenv('PROXMOX_VERIFY_SSL', str(server_config.get('verify_ssl', False))).lower() == 'true',
            'port': server_config.get('port', 8006),
            'server_name': server_config.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏'),
            'server_description': server_config.get('description', '')
        }

        logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä: {server_config.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')} - {server_config.get('host')}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Proxmox –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –º–µ–Ω—é
        print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Proxmox...")
        try:
            test_client = create_proxmox_client(config)
            if test_client.connect():
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Proxmox —É—Å–ø–µ—à–Ω–æ")
                test_client.disconnect()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Proxmox")
                print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
                return
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return

        # –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è –º–µ–Ω—é
        await run_menu(config)

        logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")

    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        raise


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    asyncio.run(main())
