#!/usr/bin/env python3
"""
Deploy-Stand - –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ Proxmox VE

–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import sys
import os
import logging
from typing import Optional

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from core.module_factory import ModuleFactory
from core.config.config_manager import ConfigManager
from ui.cli.menu_system import MainMenu
from utils.logging.logger import setup_logging
from utils.caching.cache_manager import CacheManager
from utils.monitoring.metrics import MetricsCollector


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        logger = setup_logging()
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Deploy-Stand...")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
        logger.info("üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã...")

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏ –º–æ–¥—É–ª–µ–π
        module_factory = ModuleFactory()

        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_manager = ConfigManager()

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–µ—à –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        cache_manager = CacheManager()

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–±–æ—Ä—â–∏–∫–∞ –º–µ—Ç—Ä–∏–∫
        metrics_collector = MetricsCollector()

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π –≤ —Ñ–∞–±—Ä–∏–∫–µ
        logger.info("üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π...")

        # –ò–º–ø–æ—Ä—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
        try:
            from core.modules.deployment.basic_deployer import BasicDeployer
            from core.modules.deployment.advanced_deployer import AdvancedDeployer
            from core.modules.deployment.local_deployer import LocalDeployer
            from core.modules.deployment.remote_deployer import RemoteDeployer
            from core.modules.deployment.balanced_deployer import BalancedDeployer
            from core.modules.deployment.smart_deployer import SmartDeployer
            module_factory.register_deployment_module("basic", BasicDeployer)
            module_factory.register_deployment_module("advanced", AdvancedDeployer)
            module_factory.register_deployment_module("local", LocalDeployer)
            module_factory.register_deployment_module("remote", RemoteDeployer)
            module_factory.register_deployment_module("balanced", BalancedDeployer)
            module_factory.register_deployment_module("smart", SmartDeployer)
            logger.info("‚úÖ –ú–æ–¥—É–ª–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: {e}")

        # –ò–º–ø–æ—Ä—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏
        try:
            from core.modules.balancing.simple_balancer import SimpleBalancer
            from core.modules.balancing.smart_balancer import SmartBalancer
            module_factory.register_balancing_module("simple", SimpleBalancer)
            module_factory.register_balancing_module("smart", SmartBalancer)
            logger.info("‚úÖ –ú–æ–¥—É–ª–∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏: {e}")

        # –ò–º–ø–æ—Ä—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π —à–∞–±–ª–æ–Ω–æ–≤
        try:
            from core.modules.templates.local_templates import LocalTemplateManager
            from core.modules.templates.migration_templates import MigrationTemplateManager
            module_factory.register_template_module("local", LocalTemplateManager)
            module_factory.register_template_module("migration", MigrationTemplateManager)
            logger.info("‚úÖ –ú–æ–¥—É–ª–∏ —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —à–∞–±–ª–æ–Ω–æ–≤: {e}")

        # –ò–º–ø–æ—Ä—Ç –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π —Å–µ—Ç–∏
        try:
            from core.modules.network.bridge_manager import BridgeManager
            module_factory.register_network_module("bridge", BridgeManager)
            logger.info("‚úÖ –ú–æ–¥—É–ª–∏ —Å–µ—Ç–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —Å–µ—Ç–∏: {e}")

        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        logger.info("üéõÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é...")
        main_menu = MainMenu(
            module_factory=module_factory,
            config_manager=config_manager,
            logger_instance=logger,
            cache=cache_manager,
            metrics=metrics_collector
        )

        # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é...")
        print("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Deploy-Stand!")
        print("=" * 50)

        main_menu.show()

        logger.info("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")

    except KeyboardInterrupt:
        print("\n\nüëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main(): {e}", exc_info=True)
        sys.exit(1)


if __name__ == "__main__":
    main()
