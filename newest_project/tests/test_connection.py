#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Proxmox

–†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConnectionManager –∏ ProxmoxClient –¥–ª—è newest_project
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.utils.logger import Logger
from core.utils.validator import Validator
from core.utils.cache import Cache
from core.modules.proxmox_client import ProxmoxClient, ProxmoxClientFactory
from core.modules.connection_manager import ConnectionManager


def test_proxmox_client_interface():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ProxmoxClient"""
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ProxmoxClient...")

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        logger = Logger("test-client")
        validator = Validator()
        cache = Cache()

        client = ProxmoxClient(
            logger=logger,
            validator=validator,
            cache=cache
        )

        print("  ‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"  üìä –í–µ—Ä—Å–∏—è: {client.get_version()}")
        print(f"  üîå –ü–æ–¥–∫–ª—é—á–µ–Ω: {client.is_connected()}")

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        nodes = client.get_nodes()
        print(f"  üìã –ù–æ–¥—ã (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è): {nodes}")

        node_info = client.get_node_info("nonexistent")
        print(f"  üîç –ò–Ω—Ñ–æ –æ –Ω–æ–¥–µ: {node_info}")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False


def test_connection_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConnectionManager"""
    print("\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConnectionManager...")

    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
        logger = Logger("test-conn-manager")
        validator = Validator()
        cache = Cache()

        conn_manager = ConnectionManager(
            config_file="data/test_connections.yml",
            logger=logger,
            validator=validator,
            cache=cache
        )

        print("  ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
        connections = conn_manager.get_connections_list()
        print(f"  üìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {len(connections)}")

        for conn in connections:
            print(f"    - {conn['name']}: {conn['host']} ({'–∞–∫—Ç–∏–≤–Ω–æ' if conn['connected'] else '–Ω–µ–∞–∫—Ç–∏–≤–Ω–æ'})")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        test_conn_name = "test-connection"
        success = conn_manager.add_connection(
            name=test_conn_name,
            host="192.168.1.100:8006",
            user="root@pam",
            password="test_password",
            description="–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
        )

        if success:
            print(f"  ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ '{test_conn_name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        else:
            print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä)
        print("  üîå –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—É...")
        test_result = conn_manager.test_connection(test_conn_name)

        if test_result['success']:
            print(f"  ‚úÖ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å–ø–µ—à–µ–Ω: {test_result['version']}")
            print(f"  ‚è±Ô∏è  –í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {test_result['connection_time']} —Å–µ–∫")
            print(f"  üìã –ù–æ–¥ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ: {test_result['nodes_count']}")
        else:
            print(f"  ‚ö†Ô∏è  –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª—Å—è: {test_result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            print("    –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = conn_manager.get_connection_stats()
        print(f"  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats['active_connections']}/{stats['total_configured']} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {e}")
        return False


def test_connection_validation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")

    validator = Validator()

    # –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    valid_connections = [
        {
            'host': '192.168.1.100:8006',
            'user': 'root@pam',
            'password': 'secret'
        },
        {
            'host': 'proxmox.example.com',
            'user': 'admin@pve',
            'token_name': 'deploy-token',
            'token_value': 'secret-token'
        },
        {
            'host': '10.0.0.1',
            'user': 'user@realm',
            'password': 'password123'
        }
    ]

    print("  ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:")
    for i, conn_data in enumerate(valid_connections, 1):
        if validator.validate_proxmox_connection(conn_data):
            print(f"    –¢–µ—Å—Ç {i}: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        else:
            print(f"    –¢–µ—Å—Ç {i}: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
            for error in validator.get_errors():
                print(f"      - {error}")

    # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    invalid_connections = [
        {
            'host': 'invalid-host',
            'user': 'root@pam',
            'password': 'secret'
        },
        {
            'host': '192.168.1.100:99999',  # –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ—Ä—Ç
            'user': 'root@pam',
            'password': 'secret'
        },
        {
            'host': '192.168.1.100:8006',
            'user': 'invalid@user@domain',  # –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ @
            'password': 'secret'
        }
    ]

    print("\n  ‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:")
    for i, conn_data in enumerate(invalid_connections, 1):
        if not validator.validate_proxmox_connection(conn_data):
            print(f"    –¢–µ—Å—Ç {i}: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã—è–≤–ª–µ–Ω—ã –æ—à–∏–±–∫–∏")
            for error in validator.get_errors():
                print(f"      - {error}")
        else:
            print(f"    –¢–µ—Å—Ç {i}: –î–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏")

    return True


def test_cache_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–µ—à–µ–º"""
    print("\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–µ—à–µ–º...")

    try:
        cache = Cache()

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ—Ä—Å–∏–∏
        version_key = "test_proxmox_version"
        cache.set(version_key, "7.4-3", ttl=60)

        cached_version = cache.get(version_key)
        if cached_version:
            print(f"  ‚úÖ –í–µ—Ä—Å–∏—è –∑–∞–∫–µ—à–∏—Ä–æ–≤–∞–Ω–∞: {cached_version}")
        else:
            print("  ‚ùå –í–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–µ—à–µ")

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è TTL
        print("  ‚è∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è TTL —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")
        import time
        time.sleep(2)

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–µ—à –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ TTL
        cache2 = Cache()
        expired_version = cache2.get(version_key)
        if expired_version:
            print(f"  ‚úÖ TTL –Ω–µ –∏—Å—Ç–µ–∫: {expired_version}")
        else:
            print("  ‚úÖ TTL –∏—Å—Ç–µ–∫, –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–µ—à–∞")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–µ—à–∞: {e}")
        return False


def test_logger_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ª–æ–≥–≥–µ—Ä–æ–º"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ª–æ–≥–≥–µ—Ä–æ–º...")

    try:
        logger = Logger("test-integration", "DEBUG")
        logger.setup_logging(log_to_file=False, log_to_console=True)

        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        logger.log_connection_attempt("192.168.1.100:8006", "root@pam")
        logger.log_connection_success("192.168.1.100:8006", "7.4-3")
        logger.log_vm_creation("test-vm", "pve1", 100)
        logger.log_network_setup("test-vm", "vmbr0", 100)
        logger.log_deployment_success(3, 45.2)

        print("  ‚úÖ –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        print("  üìÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –ª–æ–≥–≥–µ—Ä–∞")

        return True

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–≥–µ—Ä–∞: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    print("=" * 60)

    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        Path("data").mkdir(exist_ok=True)
        Path("logs").mkdir(exist_ok=True)

        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        success = True

        success &= test_proxmox_client_interface()
        success &= test_connection_manager()
        success &= test_connection_validation()
        success &= test_cache_integration()
        success &= test_logger_integration()

        print("\n" + "=" * 60)
        if success:
            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")

        print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("  - ProxmoxClient: –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("  - ConnectionManager: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ")
        print("  - Validator: –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("  - Cache: –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ")
        print("  - Logger: –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –∞–∫—Ç–∏–≤–Ω–æ–µ")

        # –ü–∞—É–∑–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")

    except KeyboardInterrupt:
        print("\n\nüëã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        raise


if __name__ == "__main__":
    main()
